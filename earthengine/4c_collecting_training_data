// -----------------------------------------------------------------
// Classifying cropland using NDVI thresholds
// Contact: izvonkov@umd.edu
// -----------------------------------------------------------------

// 1. Specify ROI 
var roi = ee.Geometry.BBox(-16.1, 16.2, -15.6, 16.5)
Map.centerObject(roi, 11);

// 2. Load S2 images with Cloud Score Plus
function clipFunc(img){return img.clip(roi)}
function cloudScorePlus(img){return img.updateMask(img.select('cs_cdf').gte(0.7))}
function computeNDVI(img){
  var ndvi = img.normalizedDifference(['B8', 'B4']).rename('NDVI')
  return img.addBands(ndvi)
}

var start = ee.Date("2022-04-01")
var end = ee.Date("2023-01-01")
var csPlus = ee.ImageCollection('GOOGLE/CLOUD_SCORE_PLUS/V1/S2_HARMONIZED');
var S2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
  .filterDate(start, end)
  .filterBounds(roi)
  .linkCollection(csPlus, ['cs_cdf'])
  .map(cloudScorePlus)
  .map(clipFunc)
  .map(computeNDVI)
  .select(['B2', 'B3', 'B4', 'NDVI'])
  

var images = []
var daterange = []
var current = start
while (end.difference(current, 'month').gt(0).getInfo() == 1){
  daterange.push(current.format("YY/MM"));
  var next = current.advance(1, 'month');
  images.push(S2.filterDate(current, next).median())
  current = next
}

var vis = { bands: ['B4', 'B3', 'B2'], min: 0, max: 2500 }
for (var i=0; i<images.length; i++){
  Map.addLayer(images[i], vis, daterange[i].getInfo())
}

var composite = ee.ImageCollection.fromImages(images).toBands().clip(roi);
var ndvi = composite.select(".*_NDVI").rename(daterange)
var panel = ui.Panel();
panel.style().set({width: '400px', position: 'bottom-right'});
Map.add(panel);
Map.style().set('cursor', 'crosshair');
Map.onClick(function(coords) {
  panel.clear();
  console.log(coords.lat + ',' + coords.lon)
  var point = ee.Geometry.Point(coords.lon, coords.lat);
  var chart = ui.Chart.image.regions(ndvi, point, null, 10);
  chart.setOptions({title: 'NDVI'});
  panel.add(chart);
});

// TODO 1: Click the point tool in the top left hand side of the map view
// TODO 2: Hover over geometry and click the cog to rename the geometry import to nonCropPoints
// TOOD 3: Collect non-crop points in region of interest
// TODO 4: Click geometry imports and "+add new layer"
// TODO 5:  Hover over geometry and click the cog to rename the geometry import to cropPoints
// TODO 6: Collect crop points in region of interest
// TODO 7: When you have collected 50 points in each category uncomment below lines
// TODO 8: Run the script and run the export tasks to save the points.
// function toFC(points, is_crop){
//   return ee.FeatureCollection(points.coordinates().map(function(p){
//     return ee.Feature(ee.Geometry.Point(p), {"is_crop": is_crop})
//   }))
// }
// Export.table.toAsset({collection: toFC(nonCropPoints, 0), description: 'nonCropPoints'})
// Export.table.toAsset({collection: toFC(cropPoints, 1), description: 'cropPoints'})


